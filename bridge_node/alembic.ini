# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = migrations

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat migrations/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

[dev_from_outside]
script_location = migrations
sqlalchemy.url = postgresql://bridge:a5f83ab52f2c6c8d0a31e99c@localhost:65432/bridge

[local_docker]
script_location = migrations
sqlalchemy.url = postgresql://bridgeadmin:9d9aa3783b01d7274530bae8@postgres:5432/bridge


[local_testing_against_docker]
sqlalchemy.url = postgresql://bridge_test:bridge_test@localhost:65432/bridge_test
script_location = migrations
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s
real_owner = bridge_test

[dev]
script_location = migrations
sqlalchemy.url = postgresql://bridge:a5f83ab52f2c6c8d0a31e99c@localhost:65432/bridge

[prod]
script_location = migrations
sqlalchemy.url = production sqlalchemy url not set

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
